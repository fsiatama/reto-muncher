// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              Int        @id @default(autoincrement())
  email           String     @unique
  name            String?
  phone           String?
  lastName        String?
  password        String
  Order           Order[]
  sendTransfer    Transfer[] @relation("sender")
  receiveTransfer Transfer[] @relation("receiver")
  Balance         Balance[]
  Transfer        Transfer[]
}

model Product {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  name        String
  description String?
  price       Decimal
  stock       Decimal       @default(0)
  image       String?
  OrderDetail OrderDetail[]
}

model Order {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  user        User          @relation(fields: [userId], references: [id])
  userId      Int
  OrderDetail OrderDetail[]
}

model OrderDetail {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  orderId   Int
  productId Int
  quantity  Float
  subtotal  Float
}

model Transfer {
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  toUser     User     @relation("sender", fields: [toUserId], references: [id])
  toUserId   Int
  fromUser   User     @relation("receiver", fields: [fromUserId], references: [id])
  fromUserId Int

  User   User? @relation(fields: [userId], references: [id])
  userId Int?
  @@id([fromUserId, toUserId])
}

model Balance {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  total     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
}
